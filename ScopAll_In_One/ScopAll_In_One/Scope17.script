//Script GUID:f51f3406-19d4-4f8a-a8fd-0a9cbb310140
//Used for tracking history


//  /users/v-hozhao/All_In_One/  Total Input 13   codebehind input = sample input   10 output

/******************* Datamap       4 input ---  1 output *******************/

/*******************Sample Scope   4 input ---  5 output*******************/

/********************PythonUdo     2 input ---  2 output*******************/

/*********************Code behind  1 input ---  1 output********************/

/**********************MultipleInputs 3 input ---  1 output*****************/


#REGION   PythonUdo

////////////////////////////////////////////////////

RESOURCE "Scope1.py";   //full python file name 
#DECLARE pyScript string = @"import Scope1";  // without extension

#DECLARE pyClass string = @"Scope1.DataFrameDemoReducer()";    //fileName.ClassName

#DECLARE inputFile string = @"/users/v-hozhao/All_In_One/Input/Python_iris.csv";
#DECLARE outputFile string = @"/users/v-hozhao/All_In_One/Output/Python_ClusterRun_DataFrame_Reducer_Demo_Output.txt";

Input =
    EXTRACT SepalLength: double,
            SepalWidth: double,
            PetalLength: double, 
            PetalWidth: double, 
            Name: string
    FROM @inputFile
    USING DefaultTextExtractor(delimiter:',');

Out =
    REDUCE Input ON Name
    PRODUCE SepalLength_Mean: double, 
            SepalWidth_Mean: double, 
            PetalLength_Mean: double, 
            PetalWidth_Mean: double, 
            Name: string,
            Count: int
    //USING Reducers.Python(prologue: @import_codebehind_ClusterRun_DataFrame_Reducer_Demo1_py, expression: "DataFrameDemoReducer()");
    USING Reducers.Python(prologue: @pyScript, expression: @pyClass);   //Code Behind

OUTPUT Out
TO @outputFile
USING DefaultTextOutputter(delimiter:',');

///////////////////////////////////////////////////////////////////////////////////

#DECLARE pyClassExtractor string = @"Scope1.SearchLogExtractor()"; 

#DECLARE inputFile_Extractor string = @"/users/v-hozhao/All_In_One/Input/Python_SearchLog.tsv";   //Input
#DECLARE outputFile_Extractor string = @"/users/v-hozhao/All_In_One/Output/Python_ClusterRun_Extractor_Demo_Output.txt";  //Output

searchlog =
    EXTRACT UserId: string,
            Start: string,
            Region: string,
            Query: string,
            Duration: string,
            Urls: string,
            ClickedUrls: string
    FROM @inputFile_Extractor
    //USING Extractors.Python(prologue: @import_codebehind_Scope171_py, expression: "SearchLogExtractor()");
    USING Extractors.Python(prologue: @pyScript, expression: @pyClassExtractor);   //Code Behind

OUTPUT searchlog
TO @outputFile_Extractor
USING DefaultTextOutputter(delimiter:',');


/////////////////////////////////// PythonUdo ///////////////////////////////

//#DECLARE inputFile_Reducer string = @"/users/v-hozhao/All_In_One/Input/Python_iris.csv";     //Input
//#DECLARE outputFile_Reducer string = @"/users/v-hozhao/All_In_One/Output/Python_ClusterRun_Reducer_Demo_Output.txt";  //Output
//
//Input =
//    EXTRACT SepalLength: double,
//            SepalWidth: double,
//            PetalLength: double, 
//            PetalWidth: double, 
//            Name: string
//    FROM @inputFile_Reducer
//    USING DefaultTextExtractor(delimiter:',');
//
//Out =
//    REDUCE Input ON Name
//    PRODUCE SepalLength_Mean: double, 
//            SepalWidth_Mean: double, 
//            PetalLength_Mean: double, 
//            PetalWidth_Mean: double, 
//            Name: string,
//            Count: int
//    USING Reducers.Python(prologue: @import_codebehind_Scope1_py, expression: "DataFrameDemoReducer()");
//
//OUTPUT Out
//TO @outputFile_Reducer
//USING DefaultTextOutputter(delimiter:',');
//
//
//#DECLARE inputFile_Extractor string = @"/users/v-hozhao/All_In_One/Input/Python_SearchLog.tsv";   //Input
//#DECLARE outputFile_Extractor string = @"/users/v-hozhao/All_In_One/Output/Python_ClusterRun_Extractor_Demo_Output.txt";  //Output
//
//searchlog =
//    EXTRACT UserId: string,
//            Start: string,
//            Region: string,
//            Query: string,
//            Duration: string,
//            Urls: string,
//            ClickedUrls: string
//    FROM @inputFile_Extractor
//    USING Extractors.Python(prologue: @import_codebehind_Scope1_py, expression: "SearchLogExtractor()");
//
//OUTPUT searchlog
//TO @outputFile_Extractor
//USING DefaultTextOutputter(delimiter:',');

#ENDREGION

#REGION  Debug Stream

searchlog =
    EXTRACT IId : int,
            //UId : int,
            Start : DateTime,
            Market : string,
            Query : string,
            DwellTime : int,
            Results : string,
            ClickedUrls : string
    FROM @"/users/v-hozhao/All_In_One/Input/SearchLog.txt"
    USING MyTsvExtractor();


OUTPUT searchlog
TO @"/users/v-hozhao/All_In_One/Output/DebugStream_Output.txt";

#ENDREGION

#REGION   ClusterReference  
	
#DECLARE outputCluster string = @"/users/v-hozhao/ClusterReference/SearchlogDwellTimeInMinutes.txt";

searchlog =  
    EXTRACT IId:int,  
            //UId:int,  
            Start:DateTime,  
            Market:string,  
            Query:string,  
            DwellTime:int,  
            Results:string,  
            ClickedUrls:string 
    FROM @"/users/v-hozhao/SearchLog.txt" 
    USING DefaultTextExtractor(); 

//OUTPUT TO SSTREAM @"/my/searchlog.ss";
//searchlog_ss = SSTREAM @"/my/searchlog.ss";

rs1 =                   // namespace >> class >> Method
    SELECT Start, Market, MyHelper.ClassUDO.SecondsToMinutes(DwellTime) AS DwellTimeInMinutes
    FROM searchlog;   
	//From searchlog_ss;
 
OUTPUT rs1
TO @outputCluster;  
//To @"/my/SearchlogDwellTimeInMinutes.txt";	
	
#ENDREGION

/////////////////////////////////// ScopeDataMap only Cosmos08 ///////////////////////////////
#REGION  ScopeDataMap
	
MODULE "/users/v-hozhao/All_In_One/Input/PrivacyAnnotation.module";    //input
//MODULE "/shares/PXSCosmos08.Prod/PXS.DeleteSignal.Prod/PrivacyAnnotation/PrivacyAnnotation.module";    
/*************************
DEFINE MODULE PrivacyAnnotation 
BEGIN 
 
REFERENCE @"Microsoft.DataMap.CodeAnnotation.Cosmos.dll";             //input       invisibillity
REFERENCE @"Microsoft.PrivacyServices.PrivacyAnnotation.dll";         //input       invisibillity
 
END MODULE 
*****************************************/

USING Privacy;
val =
    SELECT *
    FROM
    (
        SSTREAM @"/users/v-hozhao/All_In_One/Input/Input.ss"          //input
    );

[Privacy.DataType.BrowsingHistory]
OUTPUT val
TO SSTREAM @"/users/v-hozhao/All_In_One/Output/DataMap_Output.ss";    //output              //@"/local/DataMapTest/Output.ss";

#ENDREGION

#REGION  Sample Scope

///////////////////////////////////////////////////Sample Scope/////////////////////////////////////////////////////////////////////////

#DECLARE inputFile_sample string = @"/users/v-hozhao/All_In_One/Input/SearchLog.txt";  //input
#DECLARE inputFile_view string = @"/users/v-hozhao/All_In_One/Input/SearchLog.view";   //input

#DECLARE outputFile_sample string = @"/users/v-hozhao/All_In_One/Output/Sample_Output.txt";    //output
#DECLARE outputFile_sampleSS string = @"/users/v-hozhao/All_In_One/Output/Sample_Output.ss";   //output
#DECLARE outputFile_view string ="/users/v-hozhao/All_In_One/Output/Sample_ViewOutput.txt";    //output


searchlog =
    EXTRACT UserId : int,
            Start : DateTime,
            Region : string,
            Query : string,
            Duration : int,
            Urls : string,
            ClickedUrls : string
    FROM @inputFile_sample
    USING DefaultTextExtractor();

OUTPUT searchlog
TO @outputFile_sample
USING DefaultTextOutputter(); 

OUTPUT searchlog
TO SSTREAM @outputFile_sampleSS;   //Generate ss file

////////////////////////////////Verify View///////////////////////////////////////

searchlogView =
    VIEW @inputFile_view;

OUTPUT searchlogView
TO @outputFile_view
USING DefaultTextOutputter();

//////////////////////////////////Verify Module//////////////////////////////////////

MODULE @"/users/v-hozhao/All_In_One/Input/SearchLog.module";                      //input
data = CosmosSampleData.SearchLogRaw();

OUTPUT data
TO @"/users/v-hozhao/All_In_One/Output/Sample_MoudleOutput.txt"                   //output
USING DefaultTextOutputter();

/////////////////////////////////Verify Import/////////////////////////////////////////

IMPORT @"/users/v-hozhao/All_In_One/Input/SearchLogImportedScript.script" AS myScript;            //input
/*
EXPORT result =
     EXTRACT Id : int,
             //UId : int,
             Start : DateTime,
             Market : string,
             Query : string,
             DwellTime : int,
             Results : string,
             ClickedUrls : string
     FROM @"/users/v-hozhao/All_In_One/Input/SearchLog.txt"
     USING DefaultTextExtractor();
*/

OUTPUT myScript.result
TO @"/users/v-hozhao/All_In_One/Output/Sample_ImportOutput.tsv"                    //output
USING DefaultTextOutputter();

#ENDREGION

#REGION   Code behind

////////////////////////////////////////Code behind///////////////////////////////////

searchlog =
    EXTRACT UserId : int,
            Start : DateTime,
            Region : string,
            Query : string,
            Duration : int,
            Urls : string,
            ClickedUrls : string
    FROM @"/users/v-hozhao/All_In_One/Input/SearchLog.txt"      //input            //adl://sandbox-c08.azuredatalakestore.net/users/v-hozhao/Aggregates/
    USING DefaultTextExtractor();

rs1 =
    SELECT Region,
           MySum(Duration) AS TotalDuration
    FROM searchlog
    GROUP BY Region;

OUTPUT rs1
TO @"/users/v-hozhao/All_In_One/Output/CodeBehind_Aggregatesoutput.txt";    // Output              

#ENDREGION

#REGION   MultipleInput
////////////////////////////////////////////// MultipleInputs///////////////////////////////////////////////////////////

#DECLARE endtime string = @"2016-07-11";
#DECLARE mm string = @"Jul";
#DECLARE w string = "5";
#DECLARE m string = "2";

#DECLARE MonthInput string = string.Format(@"/users/v-hozhao/All_In_One/Input/HealthCheckUCMUserUsage_MonthAgg.ss");    //input
#DECLARE WeekInput string = string.Format(@"/users/v-hozhao/All_In_One/Input/HealthCheckUCMUserUsage_WeekAgg.ss");      //input
#DECLARE UCMUser string = string.Format(@"/users/v-hozhao/All_In_One/Input/UCMUser_{0}.txt",@endtime.Replace("-",""));   //input
   
#DECLARE output string = string.Format(@"/users/v-hozhao/All_In_One/Output/MultipleInputs_HealthCheckUCMUserUsage_Freq.ss");   // output
//#DECLARE History string;

UCMUser =
    EXTRACT BingAdsUserId:int,
            MsAlias:string,
            UcmUserId:int
    FROM @UCMUser
    USING DefaultTextExtractor();
/*
UCMUser =
    SELECT BingAdsUserId,
           MsAlias,
           UcmUserId,
           - 1 AS NumofMonth,
           "Non" AS LastMonth,
           - 1 AS NumofWeek,
           - 1 AS TotalUsage
    FROM UCMUser;
*/


MonthInput =
    SELECT BingAdsUserId,
           MsAlias,
           UcmUserId,
           NumofMonth,
           LastMonth,
           TotalUsage
    FROM
    (
        SSTREAM @MonthInput
    );
WeekInput =
    SELECT BingAdsUserId,
           MsAlias,
           UcmUserId,
           NumofWeek,
           TotalUsage
    FROM
    (
        SSTREAM @WeekInput
    );

Join =
    SELECT M.BingAdsUserId,
           M.MsAlias,
           M.UcmUserId,
           NumofMonth,
           LastMonth,
           NumofWeek,
           M.TotalUsage
    FROM MonthInput AS M
         INNER JOIN
             WeekInput AS W
         ON M.BingAdsUserId == W.BingAdsUserId
            AND M.MsAlias == W.MsAlias
            AND M.UcmUserId == W.UcmUserId;

Join =
    SELECT UCMUser.BingAdsUserId,
           UCMUser.MsAlias,
           UCMUser.UcmUserId,
           NumofMonth??-1 AS NumofMonth,
           LastMonth??"Non" AS LastMonth,
           NumofWeek??-1 AS NumofWeek,
           TotalUsage??-1 AS TotalUsage
    FROM UCMUser
         LEFT JOIN
             Join
         ON UCMUser.BingAdsUserId == Join.BingAdsUserId AND
            UCMUser.MsAlias == Join.MsAlias AND
            UCMUser.UcmUserId == Join.UcmUserId;

Freq =
    PROCESS Join
    PRODUCE BingAdsUserId,
            MsAlias,
            UcmUserId,
            FreqSegment,
            NumofMonth,
            LastMonth,
            NumofWeek,
            TotalUsage
    USING FreqProcessor(@mm, @w, @m);
OUTPUT Freq TO SSTREAM @output;

#ENDREGION

#REGION  CS# Code

#CS
using Microsoft.SCOPE.Types;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using ScopeRuntime;


/// <summary>
/// 
/// </summary>
public class FreqProcessor : Processor
{
    /// <summary>
    /// 
    /// </summary>
    /// <param name="columns"></param>
    /// <param name="args"></param>
    /// <param name="input"></param>
    /// <returns></returns>
    public override Schema Produces(string[] columns, string[] args, Schema input)
    {
        return new Schema("BingAdsUserId:int, MsAlias:string,UcmUserId:int,FreqSegment:string,NumofMonth:int,LastMonth:string,NumofWeek:int,TotalUsage:int");
    }
    /// <summary>
    ///
    /// </summary>
    /// <param name="input"></param>
    /// <param name="output"></param>
    /// <param name="args"></param>
    /// <returns></returns>    
    public override IEnumerable<Row> Process(RowSet input, Row output, string[] args)
    {
        string mm = args[0];
        int w = Convert.ToInt32(args[1]); 
        int m = Convert.ToInt32(args[2]);

        int BingAdsUserId = 0;
        string MsAlias = string.Empty;
        int UcmUserId = 0;
        string FreqSegment = string.Empty;
        int NumofMonth = 0;
        string LastMonth = string.Empty;
        int NumofWeek = 0;
        int TotalUsage = 0;
        foreach (Row row in input.Rows)
        {
            BingAdsUserId = row["BingAdsUserId"].Integer;
            MsAlias = row["MsAlias"].String;
            UcmUserId = row["UcmUserId"].Integer;
            NumofMonth = row["NumofMonth"].Integer;
            LastMonth = row["LastMonth"].String;
            NumofWeek = row["NumofWeek"].Integer;
            TotalUsage = row["TotalUsage"].Integer;
            if (NumofWeek == w)
            {
                FreqSegment = @"Fans User";
            }
            else if (NumofMonth == m)
            {
                FreqSegment = @"Stable User";
            }
            else if (NumofMonth == 1 && LastMonth == mm)
            {
                FreqSegment = @"New User";
            }
            else if (NumofWeek == -1 && NumofMonth == -1 && LastMonth == "Non")
            {
                FreqSegment = @"Non User";
            }
            else FreqSegment = @"Swing User";
            output["BingAdsUserId"].Set(BingAdsUserId);
            output["MsAlias"].Set(MsAlias);
            output["UcmUserId"].Set(UcmUserId);
            output["NumofMonth"].Set(NumofMonth);
            output["LastMonth"].Set(LastMonth);
            output["NumofWeek"].Set(NumofWeek);
            output["TotalUsage"].Set(TotalUsage);
            output["FreqSegment"].Set(FreqSegment);
            yield return output;
        }
    }
}

#ENDCS
	
#ENDREGION